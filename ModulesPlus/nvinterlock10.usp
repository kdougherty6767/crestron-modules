/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer: JGM	
Comments: Non-Volatile Interlock	
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "NVInterlock 10"
// #HINT "10 input Non-Volatile Interlock"
// #DEFINE_CONSTANT
// #CATEGORY "" 
#CATEGORY "9" // Memory
// #DEFAULT_VOLATILE
#DEFAULT_NONVOLATILE

#HELP_BEGIN
	Just like an interlock, but non-volatile.
#HELP_END


DIGITAL_INPUT clear, i[10];

DIGITAL_OUTPUT o[10];

INTEGER j, k, numInputs, numOutputs, var[10];
 
/************************************/
FUNCTION update_outputs()
{

	for(j=1 to numOutputs)
	{
		o[j] = var[j-1];
	}

}

/************************************/
PUSH clear
{

	for(j=1 to 10)
	{
		var[j-1] = 0;
	}

	call update_outputs();
		
}

PUSH i
{

	k = getlastmodifiedarrayindex();

	for(j=1 to numInputs)
	{
		if (j <> k)
		{
			var[j-1] = 0;
		}
		else
		{
			var[j-1] = 1;
		}
	}//end for loop
	
	call update_outputs();
}

Function Main()
{
	Delay(5);

    for(numInputs = 10 to 1 Step -1)
    {
       if(IsSignalDefined(i[numInputs]))
          Break;
    }

	for(numOutputs = 10 to 1 Step -1)
	{
		if(isSignalDefined(o[numOutputs]))
			break;
	}

	call update_outputs();
}

