#CATEGORY "46" "Qsys" // Custom
#SYMBOL_NAME "Qsys Router"

#USER_SIMPLSHARP_LIBRARY "QscQsys"

#DEFINE_CONSTANT true 1
#DEFINE_CONSTANT false 0

Digital_Input OutputMuteOn, OutputMuteOff, OutputMuteToggle;
Analog_Input _skip_, Input;

Digital_Output OutputMuteIsOn, OutputMuteIsOff;
Analog_Output _skip_, _skip_, InputValue;


String_Parameter _skip_, _skip_, _skip_, _skip_, _skip_, CoreID[100], ComponentName[100];
Integer_Parameter OutputNumber;

#BEGIN_PARAMETER_PROPERTIES CoreID
   propValidUnits = unitString;
   propDefaultUnit = unitString;
   propDefaultValue = "1";
#END_PARAMETER_PROPERTIES

                                                       
QsysRouter router;

Threadsafe Change Input
{
    integer x;

    while(x != Input)
    {
        x = input;
        router.InputSelect(x);
    }
}

Push OutputMuteOn
{
	router.OutputMute(true);
}

Push OutputMuteOff
{
	router.OutputMute(false);
}

Push OutputMuteToggle
{
	if(OutputMuteIsOn)
	{
		router.OutputMute(false);
	}
	else
	{
		router.OutputMute(true);
	}
}

Callback Function onRouterInputChange(string cName, integer in)
{
    InputValue = in;
}

Callback Function onOutputMuteChange(string cName, integer value)
{
	OutputMuteIsOn = value;
	OutputMuteIsOff = !value;
}

Function Main()
{
    RegisterDelegate(router, newRouterInputChange, onRouterInputChange);
    RegisterDelegate(router, newOutputMuteChange, onOutputMuteChange);
    router.Initialize(CoreID, ComponentName, OutputNumber);

}
